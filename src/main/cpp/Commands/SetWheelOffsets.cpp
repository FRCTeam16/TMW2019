// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include <iostream>
#include "Commands/SetWheelOffsets.h"
#include "Subsystems/Drive/DriveInfo.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

SetWheelOffsets::SetWheelOffsets(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    SetRunWhenDisabled(true);
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void SetWheelOffsets::Initialize() {
	if (DriverStation::GetInstance().IsDisabled()) {
		std::cout << "Start Offsets\n";
		DriveInfo<double> offsets = Robot::driveBase->CalculatePositionOffsets();
		auto prefs = BSPrefs::GetInstance();
		prefs->StoreDouble("FLOff", offsets.FL);
		prefs->StoreDouble("FROff", offsets.FR);
		prefs->StoreDouble("RLOff", offsets.RL);
		prefs->StoreDouble("RROff", offsets.RR);
		prefs->SaveConstants();
		Robot::driveBase->ZeroTurnInfo();
		SetTimeout(1);
		std::cout << "Completed SetWheelOffsets::Initialize\n";
	} else {
		SetTimeout(0);
	}


}

// Called repeatedly when this Command is scheduled to run
void SetWheelOffsets::Execute() {

}

// Make this return true when this Command no longer needs to run execute()
bool SetWheelOffsets::IsFinished() {
    return IsTimedOut();
}

// Called once after isFinished returns true
void SetWheelOffsets::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SetWheelOffsets::Interrupted() {

}
